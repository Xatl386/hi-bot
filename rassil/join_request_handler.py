"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
"""
import logging
from pathlib import Path
from telegram import Update, ChatJoinRequest, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import ContextTypes
from telegram.error import TelegramError
from database import get_db, User, BotSettings
from config import CHANNEL_ID

logger = logging.getLogger(__name__)


async def get_greeting_message():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ë–î"""
    db = get_db()
    try:
        greeting_setting = db.query(BotSettings).filter_by(setting_key='greeting_message').first()
        message_text = greeting_setting.setting_value if greeting_setting else "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª! üëã"
        return message_text
    finally:
        db.close()


async def get_greeting_button():
    """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    db = get_db()
    try:
        button_text_setting = db.query(BotSettings).filter_by(setting_key='greeting_button_text').first()
        button_url_setting = db.query(BotSettings).filter_by(setting_key='greeting_button_url').first()
        
        button_text = button_text_setting.setting_value if button_text_setting else None
        button_url = button_url_setting.setting_value if button_url_setting else None
        
        if button_text and button_url:
            return {'text': button_text, 'url': button_url}
        return None
    finally:
        db.close()


async def get_greeting_media():
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    db = get_db()
    try:
        media_setting = db.query(BotSettings).filter_by(setting_key='greeting_media_paths').first()
        if media_setting and media_setting.setting_value:
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–∞—è –∑–∞–ø—è—Ç—ã–º–∏
            paths = media_setting.setting_value.split(',')
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
            existing_paths = [path.strip() for path in paths if Path(path.strip()).exists()]
            return existing_paths if existing_paths else None
        return None
    finally:
        db.close()


async def send_greeting_message(context: ContextTypes.DEFAULT_TYPE, user_chat_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        user_chat_id: Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        message_text = await get_greeting_message()
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏
        button_config = await get_greeting_button()
        
        # –ü–æ–ª—É—á–∞–µ–º –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
        media_paths = await get_greeting_media()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
        reply_markup = None
        if button_config:
            keyboard = [[InlineKeyboardButton(button_config['text'], url=button_config['url'])]]
            reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if media_paths and len(media_paths) > 0:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –º–µ–¥–∏–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø–æ–π)
            if len(media_paths) == 1:
                # –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
                with open(media_paths[0], 'rb') as photo:
                    await context.bot.send_photo(
                        chat_id=user_chat_id,
                        photo=photo,
                        caption=message_text,
                        parse_mode='HTML',
                        reply_markup=reply_markup
                    )
            else:
                # –ù–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø–æ–π (–¥–æ 10 —à—Ç—É–∫)
                media_group = []
                for idx, path in enumerate(media_paths[:10]):  # Telegram –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–æ 10 –º–µ–¥–∏–∞
                    with open(path, 'rb') as photo:
                        if idx == 0:
                            # –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
                            media_group.append(
                                InputMediaPhoto(
                                    media=photo.read(),
                                    caption=message_text,
                                    parse_mode='HTML'
                                )
                            )
                        else:
                            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
                            media_group.append(InputMediaPhoto(media=photo.read()))
                
                await context.bot.send_media_group(
                    chat_id=user_chat_id,
                    media=media_group
                )
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                # (—Ç.–∫. media_group –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏)
                if reply_markup:
                    await context.bot.send_message(
                        chat_id=user_chat_id,
                        text="üëÜ",
                        reply_markup=reply_markup
                    )
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
            await context.bot.send_message(
                chat_id=user_chat_id,
                text=message_text,
                parse_mode='HTML',
                reply_markup=reply_markup,
                disable_web_page_preview=True
            )
        
        logger.info(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}")
        
    except TelegramError as e:
        logger.error(f"Telegram –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}: {e}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}: {e}")


async def handle_join_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ –∑–∞—è–≤–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    join_request: ChatJoinRequest = update.chat_join_request
    user_id = join_request.from_user.id
    chat_id = join_request.chat.id
    user = join_request.from_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à –∫–∞–Ω–∞–ª
    if CHANNEL_ID and str(chat_id) != str(CHANNEL_ID):
        logger.info(f"–ó–∞—è–≤–∫–∞ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª {chat_id}, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
        return
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{user.username})")
    
    try:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞—è–≤–∫—É
        await context.bot.approve_chat_join_request(
            chat_id=chat_id,
            user_id=user_id
        )
        logger.info(f"‚úÖ –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è—Ç–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
        db = get_db()
        try:
            db_user = db.query(User).filter_by(user_id=user_id).first()
            user_chat_id = db_user.chat_id if db_user else user_id
        finally:
            db.close()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await send_greeting_message(context, user_chat_id)
        
    except TelegramError as e:
        logger.error(f"Telegram –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")


